// Generated by dia2code
#ifndef ENGINE__RECORD__H
#define ENGINE__RECORD__H

#include <vector>
#include "../state/State.h"
#include "Ruler.h"
#include "DirectionCommand.h"
#include "../state/MobileElement.h"
#include "../state/Direction.h"
#include <iostream>
#include "MoveCharacter.h"
#include "../state/State.h"



namespace engine {
  class ActionList;
}

namespace engine {

  /// class Record - 
  class Record {
    // Attributes
  protected:
    state::State& mainState;
    state::State* initState;
    state::State* lastState;
    std::vector<ActionList*> actions;
    int idx;
    // Operations
  public:
    Record (state::State& s);
    ~Record ();
    void clear ();
    void startRecord ();
    /// 										
    /// @param actions		(???) 
    void recordOne (ActionList* actions);
    void stopRecord ();
    void startReplay ();
    bool replayOne ();
    void startRollback ();
    bool rollbackOne ();
  };

};

#endif
