// Generated by dia2code
#ifndef STATE__STATE__H
#define STATE__STATE__H


namespace state {
  class ElementList;
  class ElementGrid;
  class State;
  class MobileElement;
  class ElementFactory;
  class StateEvent;
  class Observable;
}

#include "ElementList.h"
#include "ElementGrid.h"
#include "StateEventId.h"
#include "Observable.h"

namespace state {

  /// class State - 
  class State : public state::Observable {
    // Associations
    // Attributes
  protected:
    ElementList chars;
    ElementGrid grid;
    /// 		
    int epoch;
    // Operations
  public:
    State ();
    ~State ();
    State* const clone ();
    void copy (const State& other);
    bool const equals (const State& other);
    int const getEpoch ();
    ElementGrid& getGrid ();
    const ElementGrid& getGrid ();
    const ElementList& getChars ();
    ElementList& getChars ();
    const MobileElement* const getChar (int idx);
    MobileElement* getChar (int idx);
    void setElementFactory (ElementFactory* f);
    void setEpoch (int time);
    void setGrid (const ElementGrid& eg);
    void setChars (const ElementList& el);
    void loadLevel (const char* filename);
    void loadChars (const char* filename);
    void const notifyObservers (StateEventId id);
    /// 	
    /// @param e		(???) 
    void const notifyObservers (const StateEvent& e);
  };

};

#endif
